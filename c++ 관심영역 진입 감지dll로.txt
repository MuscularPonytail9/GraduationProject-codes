#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/imgcodecs/imgcodecs.hpp>
#include <opencv2/imgproc/imgproc.hpp>
#include <opencv2/objdetect.hpp>
#include <opencv2/videoio.hpp>
#include <opencv2/video.hpp>
#include <iostream>



extern "C" {
    void(_stdcall* debugLog)(const char*) = NULL;

    __declspec(dllexport) void LinkDebug(void(_stdcall* d)(const char*))
    {
        debugLog = d;
        d("Debug Link Successful!");
    }
}
extern "C" {
    __declspec(dllexport) void RoiDetect(bool* status) {
        using namespace cv;
        using namespace std;
        debugLog("function called");
        int t = 0;
        VideoCapture cap(0);
        Mat img;
        Mat imgBGS;
        Mat blur;
        Ptr<BackgroundSubtractor> BackSub;
        int whitePixNum = 0;
        BackSub = createBackgroundSubtractorMOG2(5000, 600.0, false);
        while (t < 152) {
            cap.read(img);
            GaussianBlur(img, blur, Size(5, 5), 5, 0);
            BackSub->apply(blur, imgBGS, 0);
            Mat ROI(imgBGS, Rect(230, 20, 200, 400));
            for (int x = 0; x < ROI.rows; x++) {
                for (int y = 0; y < ROI.cols; y++) {
                    if (ROI.at<uchar>(x, y) == 255) {
                        whitePixNum++;
                    }
                }
            }
            if (whitePixNum > 8000) {
                t++;
            }
            else {
                t = 0;
            }
            if (t == 150) {
                *status = true;
                debugLog("detected");
            }
        }
        waitKey(1);
    }
}